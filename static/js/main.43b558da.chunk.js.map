{"version":3,"sources":["components/Table/Table.js","components/BodyModal/BodyModal.js","components/Modal/Modal.js","components/App/App.js","store/store.js","local-storage/localStorage.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","marginTop","RemoveButton","withStyles","root","borderRadius","border","color","height","marginBottom","label","textTransform","Button","EditButton","StyledTableCell","head","backgroundColor","TableCell","CustomTable","setOpen","contacts","useSelector","state","dispatch","useDispatch","classes","captions","length","Object","keys","map","caption","idx","align","replace","toLocaleUpperCase","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","variant","TableBody","row","hover","values","value","index","scope","button","onClick","type","payload","editContact","removeContact","BodyModal","props","selectedIndex","useState","contact","console","log","onSubmit","evt","preventDefault","name","target","trim","lastname","age","pager","handleClose","TextField","id","defaultValue","required","rand","Math","round","random","getModalStyle","top","left","transform","theme","paper","position","width","palette","background","boxShadow","shadows","padding","spacing","CloseButton","SimpleModal","open","React","modalStyle","body","style","Modal","onClose","aria-labelledby","aria-describedby","disableBackdropClick","App","persistedState","serializedState","JSON","parse","window","localStorage","getItem","data","err","loadState","rootReducer","combineReducers","action","filter","_","item","store","createStore","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43b558da.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Button} from \"@material-ui/core\";\r\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\r\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n        marginTop: 10\r\n    },\r\n});\r\n\r\nconst RemoveButton = withStyles({\r\n    root: {\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        minWidth: 40,\r\n        height: 20,\r\n        marginBottom: 10,\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nconst EditButton = withStyles({\r\n    root: {\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        minWidth: 40,\r\n        height: 20,\r\n        marginBottom: 10,\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\n\r\nconst StyledTableCell = withStyles({\r\n    head: {\r\n        backgroundColor: '#C0D9D9',\r\n        color: 'white'\r\n    },\r\n})(TableCell);\r\n\r\n\r\nexport default function CustomTable({setOpen}) {\r\n\r\n    const contacts = useSelector(state => state.contacts);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const captions = contacts.length && Object.keys(contacts[0]).map((caption, idx) =>\r\n        <StyledTableCell\r\n            key={idx}\r\n            align=\"center\"\r\n        >\r\n            {caption.replace(caption[0], caption[0].toLocaleUpperCase())}\r\n        </StyledTableCell>);\r\n\r\n\r\n    const removeContact = (idx) => {\r\n        dispatch({\r\n            type: 'REMOVE_CONTACT',\r\n            payload: idx\r\n        })\r\n    };\r\n\r\n    const editContact = (idx) => {\r\n        setOpen(true);\r\n        dispatch({\r\n            type: 'SELECT_INDEX',\r\n            payload: idx\r\n        })\r\n    };\r\n\r\n    return (\r\n        contacts.length ? <TableContainer component={Paper}>\r\n            <Table\r\n                className={classes.table}\r\n                size=\"medium\"\r\n                aria-label=\"customized table\"\r\n            >\r\n                <TableHead>\r\n                    <TableRow variant=\"head\">\r\n                        {captions}\r\n                        <StyledTableCell\r\n                            align=\"center\"\r\n                        >\r\n                            Edit\r\n                        </StyledTableCell>\r\n\r\n                        <StyledTableCell\r\n                            align=\"center\"\r\n                        > Remove\r\n\r\n                        </StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n\r\n                    {contacts.map((row, idx) => (\r\n                        <TableRow key={idx}\r\n                                  hover={true}\r\n                        >\r\n\r\n                            {Object.values(row).map((value, index) => <TableCell\r\n                                key={index}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                align=\"center\"\r\n                            >\r\n                                {value}\r\n\r\n                            </TableCell>)\r\n                            }\r\n\r\n\r\n                            <TableCell align=\"center\">\r\n                                <EditButton className={classes.button}\r\n                                            onClick={() => editContact(idx)}\r\n                                >\r\n                                    <EditTwoToneIcon/>\r\n                                </EditButton>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"center\">\r\n                                <RemoveButton className={classes.button}\r\n                                              onClick={() => removeContact(idx)}\r\n                                >\r\n                                    <DeleteTwoToneIcon/>\r\n                                </RemoveButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer> : null\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport './BodyModal.css';\r\n\r\nfunction BodyModal(props) {\r\n\r\n    const {contacts, selectedIndex} = useSelector(state => state);\r\n    const [contact] = useState(contacts[selectedIndex]);\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(contact)\r\n    const saveContact = (evt) => {\r\n        evt.preventDefault();\r\n        const name = evt.target['name'].value.trim();\r\n        const lastname = evt.target['lastname'].value.trim();\r\n        const age = evt.target['age'].value.trim();\r\n        const pager = evt.target['pager'].value.trim();\r\n\r\n        if (name !== '' && lastname !== '' && age !== '' && pager !== '') {\r\n\r\n            if (selectedIndex !== null) {\r\n                dispatch({\r\n                    type: 'SAVE_EDITING_CONTACT',\r\n                    payload: {\r\n                        selectedIndex,\r\n                        name,\r\n                        lastname,\r\n                        age,\r\n                        pager\r\n                    }\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: 'ADD_CONTACT',\r\n                    payload: {\r\n                        name,\r\n                        lastname,\r\n                        age: +age,\r\n                        pager: +pager\r\n                    }\r\n                });\r\n            }\r\n\r\n            props.handleClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add\">\r\n            <form onSubmit={saveContact}>\r\n                <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    defaultValue={contact && contact.name}\r\n                    required\r\n                />\r\n\r\n                <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"LastName\"\r\n                    required\r\n                    name=\"lastname\"\r\n                    defaultValue={contact && contact.lastname}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"standard-basic\"\r\n                    type=\"number\"\r\n                    required\r\n                    label=\"Age\"\r\n                    name=\"age\"\r\n                    defaultValue={contact && contact.age}\r\n                />\r\n\r\n                <TextField\r\n                    defaultValue={contact && contact.pager}\r\n                    type=\"number\"\r\n                    id=\"standard-basic\"\r\n                    required\r\n                    label=\"Pager\"\r\n                    name=\"pager\"\r\n                />\r\n\r\n                <input type=\"submit\" value={!contact?\"Save Contact\": \"Save Changes\"}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BodyModal;","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport BodyModal from '../BodyModal/BodyModal'\r\nimport {Button} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\nimport './Modal.css';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst CloseButton = withStyles({\r\n    root: {\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        minWidth: 20,\r\n        height: 20,\r\n        marginBottom: 10,\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nexport default function SimpleModal({open, setOpen}) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        dispatch({\r\n            type: 'SELECT_INDEX',\r\n            payload: null\r\n        })\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className=\"cls-button-wrapper\">\r\n                <CloseButton\r\n                    onClick={handleClose}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                >\r\n                    &#10006;\r\n                </CloseButton>\r\n            </div>\r\n            <BodyModal\r\n                handleClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"wrapper-modal\">\r\n            <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleOpen}>\r\n                Add contact\r\n            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                disableBackdropClick={true}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport './App.css';\nimport CustomTable from \"../Table/Table\";\nimport SimpleModal from \"../Modal/Modal\";\n\nfunction App() {\n\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className=\"App\">\n            <header className=\"header\">\n                <h2>Test task</h2>\n            </header>\n            <main className=\"content\">\n                <CustomTable\n                    open={open}\n                    setOpen={setOpen}\n                />\n                <SimpleModal\n                    open={open}\n                    setOpen={setOpen}\n                />\n            </main>\n            <footer className=\"footer\">\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","import {createStore, combineReducers} from \"redux\";\r\nimport {loadState, saveState} from \"../local-storage/localStorage\";\r\n\r\nfunction counterReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ADD_CONTACT':\r\n            return [...state, action.payload];\r\n        case 'REMOVE_CONTACT':\r\n            return state.filter((_, idx) => idx !== action.payload);\r\n        case 'SAVE_EDITING_CONTACT':\r\n            console.log(action.payload.name)\r\n            return state.map((item, index) => {\r\n                if (index === action.payload.selectedIndex) {\r\n                    return {\r\n                        ...item,\r\n                        name: action.payload.name,\r\n                        lastname: action.payload.lastname,\r\n                        age: action.payload.age,\r\n                        pager: action.payload.pager\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction selectReducer(state = null, action) {\r\n    switch (action.type) {\r\n        case 'SELECT_INDEX':\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst persistedState = {\r\n    contacts: loadState(),\r\n    selectedIndex: null\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: counterReducer,\r\n    selectedIndex: selectReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    persistedState\r\n);\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n    console.log(store.getState())\r\n});\r\n\r\n\r\n\r\n","import data from \"../data/data.json\";\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = JSON.parse(window.localStorage.getItem('state'));\r\n\r\n        if (serializedState === null) {\r\n            return data\r\n        }\r\n\r\n        if (serializedState.length === 0) {\r\n            return data\r\n        }\r\n\r\n        return serializedState;\r\n    } catch (err) {\r\n        //console.log(data)\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state.contacts);\r\n        window.localStorage.setItem('state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport App from './components/App/App';\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <React.StrictMode>\n          <App />\n      </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}